# Manage Initiators

---
- name: Manage Initiators of VPLEX
  hosts: localhost
  connection: local
  vars:
    # Variable parameters
    vplexhost: <************>
    vplexuser: <************>
    vplexpassword: <************>
    cluster_name: 'cluster-1'
    port_wwn: '0x21000024ff30ae28'
    port_wwn_manual: '0x0000000000000002'
    host_type: 'hpux'
    initiator_name_update: 'initiator_test'
    # Constant parameters
    verifycert: false
    initiator_name: 'ansible_init'
    initiator_name_manual: 'ansible_init_manual'
    new_initiator_name_wwn: 'ansible_init_update_wwn'
    new_initiator_name: 'ansible_init_update_name'

  collections:
    - dellemc.vplex

  tasks:
    # Task to register the initiator with port_wwn
    - name: Register the initiator with port_wwn
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ initiator_name }}"
        port_wwn: "{{ port_wwn }}"
        host_type: "{{ host_type }}"
        registered: true
        state: "present"
      register: reg_initiator

    - debug:
        var: reg_initiator

    # Task to register the initiator with port_wwn idempotency
    - name: Register the initiator with port_wwn - Idempotency
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ initiator_name }}"
        port_wwn: "{{ port_wwn }}"
        host_type: "{{ host_type }}"
        registered: true
        state: "present"
      register: reg_initiator_idem

    - debug:
        var: reg_initiator_idem

    # Task to register the initiator with port_wwn - Manual Register
    - name: Register the initiator with port_wwn - Manual
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ initiator_name_manual }}"
        port_wwn: "{{ port_wwn_manual }}"
        host_type: "{{ host_type }}"
        registered: true
        state: "present"
      register: reg_initiator_manual

    - debug:
        var: reg_initiator_manual

    # Task to register the initiator with port_wwn - Manual Reg Idempotency
    - name: Register the initiator with port_wwn - Manual Register Idempotency
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ initiator_name_manual }}"
        port_wwn: "{{ port_wwn_manual }}"
        host_type: "{{ host_type }}"
        registered: true
        state: "present"
      register: reg_initiator_manual_idem

    - debug:
        var: reg_initiator_manual_idem

    # Task to get the initiator with port_wwn
    - name: Get details of an Initiator with port_wwn
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn }}"
        state: "present"
      register: get_initiator_wwn

    - debug:
        var: get_initiator_wwn

    # Task to get the initiator with initiator name
    - name: Get details of an Initiator with initiator name
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ initiator_name }}"
        state: "present"
      register: get_initiator

    - debug:
        var: get_initiator

    # Task to rename the initiator with port_wwn
    - name: Rename the Initiator with port_wwn
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn }}"
        new_initiator_name: "{{ new_initiator_name_wwn }}"
        state: "present"
      register: modify_initiator_wwn

    - debug:
        var: modify_initiator_wwn

    # Task to rename the initiator with port_wwn idempotency
    - name: Rename the Initiator with port_wwn - Idempotency
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn }}"
        new_initiator_name: "{{ new_initiator_name_wwn }}"
        state: "present"
      register: modify_initiator_wwn_idem

    - debug:
        var: modify_initiator_wwn_idem

    # Task to rename the initiator with initiator name
    - name: Rename the Initiator with initiator name
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ initiator_name_update }}"
        new_initiator_name: "{{ new_initiator_name }}"
        state: "present"
      register: modify_initiator

    - debug:
        var: modify_initiator

    # Task to unregister the initiator with port_wwn
    - name: Unregister the initiator with port_wwn
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn }}"
        registered: false
        state: "present"
      register: unreg_initiator_wwn

    - debug:
        var: unreg_initiator_wwn

    # Task to unregister the initiator with port_wwn idempotency
    - name: Unregister the initiator with port_wwn - Idempotency
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn }}"
        registered: false
        state: "present"
      register: unreg_initiator_wwn_idem

    - debug:
        var: unreg_initiator_wwn_idem

    # Task to unregister the initiator with initiator name
    - name: Unregister the initiator with initiator name
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ new_initiator_name }}"
        registered: false
        state: "present"
      register: unreg_initiator

    - debug:
        var: unreg_initiator

    # Task to unregister the initiator with port_wwn - state absent
    - name: Unregister the initiator with port_wwn - state absent
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn_manual }}"
        registered: false
        state: "absent"
      register: unreg_initiator_wwn_absent

    - debug:
        var: unreg_initiator_wwn_absent

    # Task to unregister initiator with port_wwn - state absent(Idempotency)
    - name: Unregister initiator with port_wwn - state absent Idempotency
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        port_wwn: "{{ port_wwn_manual }}"
        registered: false
        state: "absent"
      register: unreg_initiator_wwn_absent_idem

    - debug:
        var: unreg_initiator_wwn_absent_idem

    # Task to rediscover the initiators
    - name: Rediscover Initiators
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        state: "present"
      register: rediscover_initiator

    - debug:
        var: rediscover_initiator

    # Task to rediscover the initiators with timeout
    - name: Rediscover Initiators with timeout value set
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        rediscover_timeout: "5"
        state: "present"
      register: rediscover_timeout

    - debug:
        var: rediscover_timeout
