# Manage Virtual Volumes

---
- name: Perform Virtual Volume module operations on VPLEX
  hosts: localhost
  connection: local
  vars:
    # Variable Parameters
    vplexhost: <**************>
    vplexuser: <**************>
    vplexpassword: <**************>
    cluster_name: 'cluster-1'
    # Constant Parameters
    verifycert: false
    supporting_device_name: 'ansible_virt_vol_dev'
    virtual_volume_name: 'ansible_virt_vol_dev_vol'
    virtual_volume_id: 'ansible_virt_vol_dev_vol'
    new_virtual_volume_name: 'ansible_virt_vol_dev_vol_new'

  collections:
    - dellemc.vplex

  tasks:
    # create new virtual volume
    - name: create virtual volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ virtual_volume_name }}"
        supporting_device_name: "{{ supporting_device_name }}"
        state: "present"
      register: create_vol
    - debug:
        var: create_vol

    # create new virtual volume
    - name: create virtual volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ virtual_volume_name }}"
        supporting_device_name: "{{ supporting_device_name }}"
        state: "present"
      register: create_vol_idem
    - debug:
        var: create_vol_idem

    # rename virtual volume
    - name: Rename Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_id: "{{ virtual_volume_id }}"
        new_virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: "present"
      register: rename_vol
    - debug:
        var: rename_vol

    # rename virtual volume
    - name: Rename Virtual Volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_id: "{{ virtual_volume_id }}"
        new_virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: "present"
      register: rename_vol_idem
    - debug:
        var: rename_vol_idem

    # enable virtual volume remote access
    - name: Enable Virtual Volume remote access
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: "enable"
        state: "present"
      register: remote_access
    - debug:
        var: remote_access

    # enable virtual volume remote access
    - name: Enable Virtual Volume remote access - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: "enable"
        state: "present"
      register: remote_access_idem
    - debug:
        var: remote_access_idem

    # get virtual volume from VPLEX
    - name: Get Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: "present"
      register: vol_details
    - debug:
        var: vol_details

    # cache-invalidate virtual volume from VPLEX
    - name: cache-invalidate Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        cache_invalidate: true
        state: "present"
      register: cache_details
    - debug:
        var: cache_details

    # disable virtual volume remote access
    - name: Disable Remote Access of Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: "disable"
        state: "present"
      register: disable_remote_access
    - debug:
        var: disable_remote_access

    # disable virtual volume remote access
    - name: Disable Remote Access of Virtual Volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: "disable"
        state: "present"
      register: disable_remote_access_idem
    - debug:
        var: disable_remote_access_idem

    # expand virtual volume by backend storage volume expansion
    - name: Expand virtual volume by backend storage volume expansion
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        expand: true
        state: "present"
      register: expand_volume
    - debug:
        var: expand_volume

    # delete virtual volume
    - name: Delete Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: "absent"
      register: del_vol
    - debug:
        var: del_vol

    # delete virtual volume
    - name: Delete Virtual Volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: "absent"
      register: del_vol_idem
    - debug:
        var: del_vol_idem
