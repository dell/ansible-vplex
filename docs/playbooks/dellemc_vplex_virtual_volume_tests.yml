# Manage Virtual Volumes

---
- name: Perform Virtual Volume module operations on VPLEX
  hosts: localhost
  connection: local
  vars:
    # Variable Parameters
    vplexhost: <**************>
    vplexuser: <**************>
    vplexpassword: <**************>
    cluster_name: cluster-1
    # Constant Parameters
    verifycert: false
    supporting_device_name: ansible_virt_vol_dev
    virtual_volume_name: ansible_virt_vol_dev_vol
    virtual_volume_id: ansible_virt_vol_dev_vol
    new_virtual_volume_name: ansible_virt_vol_dev_vol_new

  # collections:
  # dellemc.vplex

  tasks:
    - name: List of all storage volumes that are unclaimed in given cluster
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 5GB
      register: volume

    - name: Claim one Storage Volume in given cluster
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_id: "{{ volume.StorageVolumes[0] }}"
        claimed_state: claimed
        state: present
      register: volume_claimed

    - name: Create extent in given cluster
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_name: "{{ volume_claimed.storage_details.name }}"
        extent_name: extent_{{ volume_claimed.storage_details.name.split(':')[-1] }}_1
        state: present
      register: extent_det

    - name: Create device in given cluster
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: "{{ supporting_device_name }}"
        extents: "{{ extent_det.extent_details.name }}"
        extent_state: present-in-device
        state: present
      register: device_det

    # create new virtual volume
    - name: Create virtual volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ virtual_volume_name }}"
        supporting_device_name: "{{ supporting_device_name }}"
        state: present
      register: create_vol

    - name: Create_vol
      ansible.legacy.debug:
        var: create_vol

    # create new virtual volume
    - name: Create virtual volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ virtual_volume_name }}"
        supporting_device_name: "{{ supporting_device_name }}"
        state: present
      register: create_vol_idem

    - name: Create_vol_idem
      ansible.legacy.debug:
        var: create_vol_idem

    # rename virtual volume
    - name: Rename Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_id: "{{ virtual_volume_id }}"
        new_virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: present
      register: rename_vol

    - name: Rename_vol
      ansible.legacy.debug:
        var: rename_vol

    # rename virtual volume
    - name: Rename Virtual Volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_id: "{{ virtual_volume_id }}"
        new_virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: present
      register: rename_vol_idem

    - name: Rename_vol_idem
      ansible.legacy.debug:
        var: rename_vol_idem

    # enable virtual volume remote access
    - name: Enable Virtual Volume remote access
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: enable
        state: present
      register: remote_access

    - name: Remote_access
      ansible.legacy.debug:
        var: remote_access

    # enable virtual volume remote access
    - name: Enable Virtual Volume remote access - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: enable
        state: present
      register: remote_access_idem

    - name: Remote_access_idem
      ansible.legacy.debug:
        var: remote_access_idem

    # get virtual volume from VPLEX
    - name: Get Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: present
      register: vol_details

    - name: Vol_details
      ansible.legacy.debug:
        var: vol_details

    # cache-invalidate virtual volume from VPLEX
    - name: Cache-invalidate Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        cache_invalidate: true
        state: present
      register: cache_details

    - name: Cache_details
      ansible.legacy.debug:
        var: cache_details

    # disable virtual volume remote access
    - name: Disable Remote Access of Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: disable
        state: present
      register: disable_remote_access

    - name: Disable_remote_access
      ansible.legacy.debug:
        var: disable_remote_access

    # disable virtual volume remote access
    - name: Disable Remote Access of Virtual Volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        remote_access: disable
        state: present
      register: disable_remote_access_idem

    - name: Disable_remote_access_idem
      ansible.legacy.debug:
        var: disable_remote_access_idem

    # expand virtual volume by backend storage volume expansion
    - name: Expand virtual volume by backend storage volume expansion
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        expand: true
        state: present
      register: expand_volume

    - name: Expand_volume
      ansible.legacy.debug:
        var: expand_volume

    # delete virtual volume
    - name: Delete Virtual Volume
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: absent
      register: del_vol

    - name: Del_vol
      ansible.legacy.debug:
        var: del_vol

    # delete virtual volume
    - name: Delete Virtual Volume - Idempotency
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ new_virtual_volume_name }}"
        state: absent
      register: del_vol_idem

    - name: Del_vol_idem
      ansible.legacy.debug:
        var: del_vol_idem

    - name: Delete device
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: "{{ supporting_device_name }}"
        state: absent

    - name: Delete extents
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        extent_name: "{{ extent_det.extent_details.name }}"
        state: absent

    - name: Unclaim Storage Volumes
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_name: "{{ volume_claimed.storage_details.name }}"
        claimed_state: unclaimed
        state: present
