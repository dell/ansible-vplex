# Manage Distributed Virtual Volumes

---
- name: Manage Distributed Virtual Volumes of Vplex
  hosts: localhost
  connection: local
  vars:
    # Variable parameters
    vplexhost: <************>
    vplexuser: <************>
    vplexpassword: <************>
    verifycert: false
    distributed_dev_name: ansible_test_dd_dev
    distributed_dev_name2: dd_for_dvv_1
    distributed_virtvol_id: ansible_test_dev
    distributed_virtvol_name: ansible_test_dd_dev_vol
    thin_enable: true
    expand: true
    dd_names: []
    # Constant parameters
    new_distributed_vv_name: ansible_update_dist_vv
    new_distributed_vv_name_1: ansible_update_dist_vv_id

      # collections:
      # - dellemc.vplex

  tasks:
    - name: List of all storage volumes that are unclaimed in cluster-1
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 5GB
      register: volume_1

    - name: Claim one Storage Volume in cluster-1
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        storage_volume_id: "{{ item }}"
        claimed_state: claimed
        state: present
      loop: "{{ volume_1.StorageVolumes[0:2] }}"
      register: volume_claimed_1

    - name: Get the storage volumes names
      ansible.builtin.set_fact:
        stor_vol_1: "{{ volume_claimed_1['results'] | map(attribute='storage_details.name') | list }}"

    - name: Create extent in cluster-1
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        storage_volume_name: "{{ item }}"
        extent_name: extent_{{ item.split(':')[-1] }}_1
        state: present
      loop: "{{ stor_vol_1 }}"
      register: extent_det_1

    - name: Get the extent names
      ansible.builtin.set_fact:
        extent_1: "{{ extent_det_1['results'] | map(attribute='extent_details.name') | list }}"

    - name: Create devices in cluster-1
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        device_name: device_{{ item }}
        extents: "{{ item }}"
        extent_state: present-in-device
        state: present
      loop: "{{ extent_1 }}"
      register: device_det_1

    - name: Get the device names
      ansible.builtin.set_fact:
        device_1: "{{ device_det_1['results'] | map(attribute='device_details.name') | list }}"

    - name: List of all storage volumes that are unclaimed in cluster-2
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 5GB
      register: volume_2

    - name: Claim one Storage Volume in cluster-2
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        storage_volume_id: "{{ item }}"
        claimed_state: claimed
        state: present
      loop: "{{ volume_2.StorageVolumes[0:2] }}"
      register: volume_claimed_2

    - name: Get the storage volumes names
      ansible.builtin.set_fact:
        stor_vol_2: "{{ volume_claimed_2['results'] | map(attribute='storage_details.name') | list }}"

    - name: Create extent in cluster-2
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        storage_volume_name: "{{ item }}"
        extent_name: extent_{{ item.split(':')[-1] }}_1
        state: present
      loop: "{{ stor_vol_2 }}"
      register: extent_det_2

    - name: Get the extent names
      ansible.builtin.set_fact:
        extent_2: "{{ extent_det_2['results'] | map(attribute='extent_details.name') | list }}"

    - name: Create devices in cluster-2
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        device_name: device_{{ item }}
        extents: "{{ item }}"
        extent_state: present-in-device
        state: present
      loop: "{{ extent_2 }}"
      register: device_det_2

    - name: Get the device names
      ansible.builtin.set_fact:
        device_2: "{{ device_det_2['results'] | map(attribute='device_details.name') | list }}"

    - name: Set names for dd
      ansible.builtin.set_fact:
        dd_names: "{{ dd_names }} + ['{{ distributed_dev_name }}'] + ['{{ distributed_dev_name2 }}']"

    # Create a Distributed device
    - name: Create a Distributed device
      dellemc_vplex_distributed_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ item.2 }}"
        target_cluster: cluster-2
        target_device: "{{ item.1 }}"
        source_cluster: cluster-1
        source_device: "{{ item.0 }}"
        rule_set: cluster-1-detaches
        sync: "false"
        state: present
      with_together:
        - "{{ device_1 }}"
        - "{{ device_2 }}"
        - "{{ dd_names }}"
      register: create_dd

    # Task to create distributed virtual volume
    - name: Create a distributed virtual volume
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ distributed_dev_name }}"
        thin_enable: "{{ thin_enable }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_name }}"
        state: present
      register: create_dist_vv

    - name: Create_dist_vv
      ansible.builtin.debug:
        var: create_dist_vv

    # Task to create distributed virtual volume
    - name: Create a distributed virtual volume for ID operations
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ distributed_dev_name2 }}"
        thin_enable: "{{ thin_enable }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_id }}"
        state: present
      register: create_dist_vv

    - name: Create_dist_vv
      ansible.builtin.debug:
        var: create_dist_vv

    # Task to create distributed virtual volume - Idempotency
    - name: Create a distributed virtual volume - Idempotency
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ distributed_dev_name }}"
        thin_enable: "{{ thin_enable }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_name }}"
        state: present
      register: create_dist_vv_idem

    - name: Create_dist_vv_idem
      ansible.builtin.debug:
        var: create_dist_vv_idem

    # Task to get details of distributed virtual volume by using its name
    - name: Get details of distributed virtual volume by using its name
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_name }}"
        state: present
      register: get_dist_vv_name

    - name: Get_dist_vv_name
      ansible.builtin.debug:
        var: get_dist_vv_name

    # Task to get details of distributed virtual volume by using its ID
    - name: Get details of distributed virtual volume by using its ID
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        state: present
      register: get_dist_vv_id

    - name: Get_dist_vv_id
      ansible.builtin.debug:
        var: get_dist_vv_id

    # Task to expand the distributed virtual volume by using its name
    - name: Expand distributed virtual volume by using its name
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_name }}"
        expand: "{{ expand }}"
        state: present
      register: expand_dist_vv_name

    - name: Expand_dist_vv_name
      ansible.builtin.debug:
        var: expand_dist_vv_name

    # Task to expand the distributed virtual volume by using its name
    # - Idempotency
    - name: Expand distributed virtual volume by using its name - Idempotency
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_name }}"
        expand: "{{ expand }}"
        state: present
      register: expand_dist_vv_name_idem

    - name: Expand_dist_vv_name_idem
      ansible.builtin.debug:
        var: expand_dist_vv_name_idem

    # Task to expand the distributed virtual volume by using its ID
    - name: Expand distributed virtual volume by using its ID
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        expand: "{{ expand }}"
        state: present
      register: expand_dist_vv_id

    - name: Expand_dist_vv_id
      ansible.builtin.debug:
        var: expand_dist_vv_id

    # Task to expand the distributed virtual volume by using its ID
    # - Idempotency
    - name: Expand distributed virtual volume by using its ID - Idempotency
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        expand: "{{ expand }}"
        state: present
      register: expand_dist_vv_id_idem

    - name: Expand_dist_vv_id_idem
      ansible.builtin.debug:
        var: expand_dist_vv_id_idem

    # Task to rename the distributed virtual volume by using its name
    - name: Rename distributed virtual volume by using its name
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ distributed_virtvol_name }}"
        new_distributed_virtual_volume_name: "{{ new_distributed_vv_name }}"
        state: present
      register: rename_dist_vv_name

    - name: Rename_dist_vv_name
      ansible.builtin.debug:
        var: rename_dist_vv_name

    # Task to rename the distributed virtual volume by using its ID
    - name: Rename distributed virtual volume by using its ID
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        new_distributed_virtual_volume_name: "{{ new_distributed_vv_name_1 }}"
        state: present
      register: rename_dist_vv_id

    - name: Rename_dist_vv_id
      ansible.builtin.debug:
        var: rename_dist_vv_id

    # Task to rename the distributed virtual volume by using its
    # ID - Idempotency
    - name: Rename distributed virtual volume by using its ID - Idempotency
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        new_distributed_virtual_volume_name: "{{ new_distributed_vv_name_1 }}"
        state: present
      register: rename_dist_vv_id_idem

    - name: Rename_dist_vv_id_idem
      ansible.builtin.debug:
        var: rename_dist_vv_id_idem

    # Task to delete the distributed virtual volume by using its name
    - name: Delete distributed virtual volume by using its name
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ new_distributed_vv_name }}"
        state: absent
      register: delete_dist_vv_name

    - name: Delete_dist_vv_name
      ansible.builtin.debug:
        var: delete_dist_vv_name

    # Task to delete the distributed virtual volume by using its name
    # - Idempotency
    - name: Delete distributed virtual volume by using its name - Idempotency
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ new_distributed_vv_name }}"
        state: absent
      register: delete_dist_vv_name_idem

    - name: Delete_dist_vv_name_idem
      ansible.builtin.debug:
        var: delete_dist_vv_name_idem

    # Task to delete the distributed virtual volume by using its ID
    - name: Delete distributed virtual volume by using its ID
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        state: absent
      register: delete_dist_vv_id

    - name: Delete_dist_vv_id
      ansible.builtin.debug:
        var: delete_dist_vv_id

    # Task to delete the distributed virtual volume by using its ID
    # - Idempotency
    - name: Delete distributed virtual volume by using its ID
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_id: "{{ distributed_virtvol_id }}"
        state: absent
      register: delete_dist_vv_id_idem

    - name: Delete_dist_vv_id_idem
      ansible.builtin.debug:
        var: delete_dist_vv_id_idem

    - name: Delete Distributed devices
      dellemc_vplex_distributed_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ item }}"
        state: absent
      loop: "{{ dd_names }}"

    - name: Delete devices from cluster-1
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        device_name: "{{ item }}"
        state: absent
      loop: "{{ device_1 }}"

    - name: Delete devices from cluster-2
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        device_name: "{{ item }}"
        state: absent
      loop: "{{ device_2 }}"

    - name: Delete extents from cluster-1
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        extent_name: "{{ item }}"
        state: absent
      loop: "{{ extent_1 }}"

    - name: Delete extents from cluster-2
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        extent_name: "{{ item }}"
        state: absent
      loop: "{{ extent_2 }}"

    - name: Unclaim Storage Volumes
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        storage_volume_id: "{{ item }}"
        claimed_state: unclaimed
        state: present
      loop: "{{ stor_vol_1 }}"

    - name: Unclaim Storage Volumes
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        storage_volume_id: "{{ item }}"
        claimed_state: unclaimed
        state: present
      loop: "{{ stor_vol_2 }}"
