# Manage Storage views

---
- name: Testing storage view operations
  hosts: localhost
  connection: local
  vars:
    # Variable parameters
    vplexhost: <**************>
    vplexuser: <**************>
    vplexpassword: <**************>
    cluster_name: cluster-1
    port1: []
    ports: []
    # Constant parameters
    verifycert: false
    storage_view_name: ansible_storview
    new_storage_view_name: ansible_storview_new
    initiators: []
    virtual_volumes: []
  # collections:
  # dellemc.vplex

  tasks:
    - name: List of all storage volumes that are unclaimed in given cluster
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 5GB
      register: volume_1

    - name: Claim one Storage Volume in given cluster
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_id: "{{ item }}"
        claimed_state: claimed
        state: present
      loop: "{{ volume_1.StorageVolumes[0:2] }}"
      register: volume_claimed_1

    - name: Get the storage volumes names
      ansible.builtin.set_fact:
        stor_vol_1: "{{ volume_claimed_1['results'] | map(attribute='storage_details.name') | list }}"

    - name: Create extent in given cluster
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_name: "{{ item }}"
        extent_name: extent_{{ item.split(':')[-1] }}_1
        state: present
      loop: "{{ stor_vol_1 }}"
      register: extent_det_1

    - name: Get the extent names
      ansible.legacy.set_fact:
        extent_1: "{{ extent_det_1['results'] | map(attribute='extent_details.name') | list }}"

    - name: Create devices in given cluster
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: device_{{ item }}
        extents: "{{ item }}"
        extent_state: present-in-device
        state: present
      loop: "{{ extent_1 }}"
      register: device_det_1

    - name: Get the device names
      ansible.builtin.set_fact:
        device_1: "{{ device_det_1['results'] | map(attribute='device_details.name') | list }}"
    - name: Display device names
      ansible.builtin.debug:
        var: device_1

    - name: Create virtual volumes
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: ansible_vir_{{ item.1 }}
        supporting_device_name: "{{ item.0 }}"
        state: present
      with_together:
        - "{{ device_1 }}"
        - "{{ range(1, 3) | list }}"
      register: vvols

    - name: Get virtual volumes names
      ansible.builtin.set_fact:
        virt_vols: "{{ vvols['results'] | map(attribute='storage_details.name') | list }}"

    - name: Register the initiator with port_wwn - Manual
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: ansible_init_{{ item.1 }}
        port_wwn: "{{ item.0 }}"
        host_type: hpux
        registered: true
        state: present
      with_together:
        - ["0x00000000001000", "0x00000000002000"]
        - "{{ range(1, 3) | list }}"
      register: reg_initiators

    - name: Get Ports
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        gather_subset:
          - port
      register: ports_details

    - name: Set port
      ansible.builtin.set_fact:
        port1: "{{ port1 }} + ['{{ ports_details.Ports[0] }}']"

    - name: Set ports
      ansible.builtin.set_fact:
        ports: "{{ ports }} + ['{{ ports_details.Ports[1] }}'] + ['{{ ports_details.Ports[2] }}']"

    - name: Build a list of initiators
      ansible.builtin.set_fact:
        initiators: "{{ initiators + ['ansible_init_' ~ item] }}"
      loop: "{{ range(1, 3) }}"

    - name: Build a list of virtual volumes
      ansible.builtin.set_fact:
        virtual_volumes: "{{ virtual_volumes + ['ansible_vir_' ~ item] }}"
      loop: "{{ range(1, 3) }}"

    # Task to create a storage view
    - name: Create a storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ storage_view_name }}"
        ports: "{{ port1 }}"
        state: present
      register: create_storage_view

    - name: Create_storage_view
      ansible.builtin.debug:
        var: create_storage_view

    # Task to create a storage view - Idempotency
    - name: Create a storage view  - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ storage_view_name }}"
        ports: "{{ port1 }}"
        state: present
      register: create_storage_view_idem

    - name: Create_storage_view_idem
      ansible.builtin.debug:
        var: create_storage_view_idem

    # Task to get a storage view details
    - name: Get a storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ storage_view_name }}"
        state: present
      register: get_storage_view

    - name: Get_storage_view
      ansible.builtin.debug:
        var: get_storage_view

    # Task to rename a storage view
    - name: Rename a storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ storage_view_name }}"
        new_storage_view_name: "{{ new_storage_view_name }}"
        state: present
      register: rename_storage_view

    - name: Rename_storage_view
      ansible.builtin.debug:
        var: rename_storage_view

    # Task to add ports to a storage view
    - name: Add ports to the storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        ports: "{{ ports }}"
        port_state: present-in-view
        state: present
      register: add_port_storage_view

    - name: Add_port_storage_view
      ansible.builtin.debug:
        var: add_port_storage_view

    # Task to add ports to a storage view
    - name: Add ports to the storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        ports: "{{ ports }}"
        port_state: present-in-view
        state: present
      register: add_port_storage_view_idem

    - name: Add_port_storage_view_idem
      ansible.builtin.debug:
        var: add_port_storage_view_idem

    # Task to add initiators to a storage view
    - name: Add initiators to the storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        initiators: "{{ initiators }}"
        initiator_state: present-in-view
        state: present
      register: add_initiator_storage_view

    - name: Add_initiator_storage_view
      ansible.builtin.debug:
        var: add_initiator_storage_view

    # Task to add initiators to a storage view - Idempotency
    - name: Add initiators to the storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        initiators: "{{ initiators }}"
        initiator_state: present-in-view
        state: present
      register: add_initiator_storage_view_idem

    - name: Add_initiator_storage_view_idem
      ansible.builtin.debug:
        var: add_initiator_storage_view_idem

    # Task to add virtualvolume to a storage view
    - name: Add virtualvolume to the storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: present-in-view
        state: present
      register: add_vv_storage_view

    - name: Add_vv_storage_view
      ansible.builtin.debug:
        var: add_vv_storage_view

    # Task to add virtualvolume to a storage view - Idempotency
    - name: Add virtualvolume to the storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: present-in-view
        state: present
      register: add_vv_storage_view_idem

    - name: Add_vv_storage_view_idem
      ansible.builtin.debug:
        var: add_vv_storage_view_idem

    # Task to remove ports from a storage view
    - name: Remove ports from storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        ports: "{{ ports }}"
        port_state: absent-in-view
        state: present
      register: remove_port_storage_view

    - name: Remove_port_storage_view
      ansible.builtin.debug:
        var: remove_port_storage_view

    # Task to remove ports from a storage view - Idempotency
    - name: Remove ports from storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        ports: "{{ ports }}"
        port_state: absent-in-view
        state: present
      register: remove_port_storage_view_idem

    - name: Remove_port_storage_view_idem
      ansible.builtin.debug:
        var: remove_port_storage_view_idem

    # Task to remove initiators from a storage view
    - name: Remove initiators from storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        initiators: "{{ initiators }}"
        initiator_state: absent-in-view
        state: present
      register: remove_initiator_storage_view

    - name: Remove_initiator_storage_view
      ansible.builtin.debug:
        var: remove_initiator_storage_view

    # Task to remove initiators from a storage view - Idempotency
    - name: Remove initiators from storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        initiators: "{{ initiators }}"
        initiator_state: absent-in-view
        state: present
      register: remove_initiator_storage_view_idem

    - name: Remove_initiator_storage_view_idem
      ansible.builtin.debug:
        var: remove_initiator_storage_view_idem

    # Task to remove virtualvolume from a storage view
    - name: Remove virtualvolume from the storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: absent-in-view
        state: present
      register: remove_vv_storage_view

    - name: Remove_vv_storage_view
      ansible.builtin.debug:
        var: remove_vv_storage_view

    # Task to remove virtualvolume from a storage view - Idempotency
    - name: Remove virtualvolume from the storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: absent-in-view
        state: present
      register: remove_vv_storage_view_idem

    - name: Remove_vv_storage_view_idem
      ansible.builtin.debug:
        var: remove_vv_storage_view_idem

    # Task to delete a storage view
    - name: Delete a storage view
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        state: absent
      register: delete_storage_view

    - name: Delete_storage_view
      ansible.builtin.debug:
        var: delete_storage_view

    # Task to delete a storage view - Idempotency
    - name: Delete a storage view - Idempotency
      dellemc_vplex_storage_view:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_view_name: "{{ new_storage_view_name }}"
        state: absent
      register: delete_storage_view_idem

    - name: Delete_storage_view_idem
      ansible.builtin.debug:
        var: delete_storage_view_idem

    - name: Unregister the initiator with initiator name
      dellemc_vplex_initiator:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        initiator_name: "{{ item }}"
        registered: false
        state: present
      loop: "{{ initiators }}"

    - name: Delete virtual volumes
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ item }}"
        state: absent
      loop: "{{ virt_vols }}"

    - name: Delete devices
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: "{{ item }}"
        state: absent
      loop: "{{ device_1 }}"

    - name: Delete extents
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        extent_name: "{{ item }}"
        state: absent
      loop: "{{ extent_1 }}"

    - name: Unclaim Storage Volumes
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_id: "{{ item }}"
        claimed_state: unclaimed
        state: present
      loop: "{{ stor_vol_1 }}"
