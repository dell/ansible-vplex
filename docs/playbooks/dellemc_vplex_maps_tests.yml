# Get the storage elements use hierarchy

---
- name: Perform Maps module operations on VPLEX
  hosts: localhost
  connection: local
  vars:
    # Variable parameters
    vplexhost: <**************>
    vplexuser: <**************>
    vplexpassword: <**************>
    cluster_name: cluster-1
    # Constant parameters
    verifycert: false
    virt_vol_name: ansible_virt_vol
    dist_virt_vol_name: ansible_distributed_vir_vol11
    dev_name: ansible_dev11
    dist_dev_name: ansible_dist_dev11
    extent_name: ansible_extent11
    strg_vol_name: ansible_strg_vol11

  # collections:
  # dellemc.vplex

  tasks:
    - name: List of all storage volumes that are unclaimed in cluster-1
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 20GB
      register: volume_1

    - name: Claim one Storage Volume in cluster-1
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        storage_volume_id: "{{ volume_1.StorageVolumes[0] }}"
        claimed_state: claimed
        state: present
      register: volume_claimed_1

    - name: Create extent in cluster-1
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        storage_volume_name: "{{ volume_claimed_1.storage_details.name }}"
        extent_name: extent_{{ volume_claimed_1.storage_details.name.split(':')[-1] }}_1
        state: present
      register: extent_det_1

    - name: Create devices in cluster-1
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-1
        device_name: device_{{ extent_det_1.extent_details.name }}
        extents: "{{ extent_det_1.extent_details.name }}"
        extent_state: present-in-device
        state: present
      register: device_det_1

    - name: List of all storage volumes that are unclaimed in cluster-2
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 20GB
      register: volume_2

    - name: Claim one Storage Volume in cluster-2
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        storage_volume_id: "{{ volume_2.StorageVolumes[0] }}"
        claimed_state: claimed
        state: present
      register: volume_claimed_2

    - name: Create extent in cluster-2
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        storage_volume_name: "{{ volume_claimed_2.storage_details.name }}"
        extent_name: extent_{{ volume_claimed_2.storage_details.name.split(':')[-1] }}_1
        state: present
      register: extent_det_2

    - name: Create devices in cluster-2
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: cluster-2
        device_name: device_{{ extent_det_2.extent_details.name }}
        extents: "{{ extent_det_2.extent_details.name }}"
        extent_state: present-in-device
        state: present
      register: device_det_2

    - name: Create a Distributed device
      dellemc_vplex_distributed_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ dist_dev_name }}"
        target_cluster: cluster-2
        target_device: "{{ device_det_2.device_details.name }}"
        source_cluster: cluster-1
        source_device: "{{ device_det_1.device_details.name }}"
        rule_set: cluster-1-detaches
        sync: "false"
        state: present
      register: create_dd

    - name: Create a distributed virtual volume
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ create_dd.dist_device_details.name }}"
        thin_enable: "true"
        distributed_virtual_volume_name: "{{ dist_virt_vol_name }}"
        state: present
      register: create_dist_vv

    - name: List of all storage volumes that are unclaimed in given cluster
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 20GB
      register: volume

    - name: Claim one Storage Volume in given cluster
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_id: "{{ volume.StorageVolumes[0] }}"
        new_storage_volume_name: "{{ strg_vol_name }}"
        claimed_state: claimed
        state: present
      register: volume_claimed

    - name: Create extent in given cluster
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_name: "{{ volume_claimed.storage_details.name }}"
        extent_name: "{{ extent_name }}"
        state: present
      register: extent_det

    - name: Create device in given cluster
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: "{{ dev_name }}"
        extents: "{{ extent_det.extent_details.name }}"
        extent_state: present-in-device
        state: present
      register: device_det

    - name: Create virtual volume in given cluster
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ virt_vol_name }}"
        supporting_device_name: "{{ device_det.device_details.name }}"
        state: present

    # Get virtual volumes Map
    - name: Get Map - virtual volumes
      dellemc_vplex_maps:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        entity_type: virtual_volumes
        entity_name: "{{ virt_vol_name }}"
      register: virt_vol_map

    - name: Virt_vol_map
      ansible.builtin.debug:
        var: virt_vol_map

    # Get distributed virtual volumes Map
    - name: Get Map - distributed virtual volume
      dellemc_vplex_maps:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        entity_type: virtual_volumes
        entity_name: "{{ dist_virt_vol_name }}"
      register: dist_virt_vol_map

    - name: Dist_virt_vol_map
      ansible.builtin.debug:
        var: dist_virt_vol_map

    # Get devices Map
    - name: Get Map - devices
      dellemc_vplex_maps:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        entity_type: devices
        entity_name: "{{ dev_name }}"
      register: dev_map

    - name: Dev_map
      ansible.builtin.debug:
        var: dev_map

    # Get distributed devices Map
    - name: Get Map - distributed devices
      dellemc_vplex_maps:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        entity_type: devices
        entity_name: "{{ dist_dev_name }}"
      register: dist_dev_map

    - name: Dist_dev_map
      ansible.builtin.debug:
        var: dist_dev_map

    # Get extents Map
    - name: Get Map - extents
      dellemc_vplex_maps:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        entity_type: extents
        entity_name: "{{ extent_name }}"
      register: ext_map

    - name: Ext_map
      ansible.builtin.debug:
        var: ext_map

    # Get storage volumes Map
    - name: Get Map - storage volumes
      dellemc_vplex_maps:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        entity_type: storage_volumes
        entity_name: "{{ strg_vol_name }}"
      register: strg_vol_map

    - name: Strg_vol_map
      ansible.builtin.debug:
        var: strg_vol_map

    - name: Delete a distributed vvs
      dellemc_vplex_distributed_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_virtual_volume_name: "{{ dist_virt_vol_name }}"
        state: absent

    - name: Delete Distributed devices
      dellemc_vplex_distributed_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        distributed_device_name: "{{ dist_dev_name }}"
        state: absent

    - name: Delete virtual volumes
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ virt_vol_name }}"
        state: absent

    - name: Delete devices
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ item.0 }}"
        device_name: "{{ item.1 }}"
        state: absent
      with_together:
        - [cluster-1, cluster-2, "{{ cluster_name }}"]
        - ["{{ device_det_1.device_details.name }}", "{{ device_det_2.device_details.name }}", "{{ dev_name }}"]

    - name: Delete extents
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ item.0 }}"
        extent_name: "{{ item.1 }}"
        state: absent
      with_together:
        - [cluster-1, cluster-2, "{{ cluster_name }}"]
        - ["{{ extent_det_1.extent_details.name }}", "{{ extent_det_2.extent_details.name }}", "{{ extent_name }}"]

    - name: Unclaim Storage Volumes
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ item.0 }}"
        storage_volume_name: "{{ item.1 }}"
        claimed_state: unclaimed
        state: present
      with_together:
        - [cluster-1, cluster-2, "{{ cluster_name }}"]
        - ["{{ volume_claimed_1.storage_details.name }}", "{{ volume_claimed_2.storage_details.name }}", "{{ strg_vol_name }}"]
