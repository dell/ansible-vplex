# Manage Consistency Groups

---
- name: Testing Consistency group operations
  hosts: localhost
  connection: local
  vars:
    # Variable parameters
    vplexhost: <**************>
    vplexuser: <**************>
    vplexpassword: <**************>
    cluster_name: cluster-1
    # Constant parameters
    verifycert: false
    cg_name: ansible_cg
    new_cg_name: ansible_cg_new
    virtual_volumes: []
  # collections:
  # - dellemc.vplex

  tasks:
    - name: List of all storage volumes that are unclaimed in given cluster
      dellemc_vplex_gatherfacts:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        gather_subset:
          - stor_vol
        filters:
          - filter_key: use
            filter_operator: equal
            filter_value: unclaimed
          - filter_key: capacity
            filter_operator: lesser
            filter_value: 5GB
      register: volume_1

    - name: Claim one Storage Volume in given cluster
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_id: "{{ item }}"
        claimed_state: claimed
        state: present
      loop: "{{ volume_1.StorageVolumes[0:3] }}"
      register: volume_claimed_1

    - name: Get the storage volumes names
      ansible.builtin.set_fact:
        stor_vol_1: "{{ volume_claimed_1['results'] | map(attribute='storage_details.name') | list }}"

    - name: Create extent in given cluster
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_name: "{{ item }}"
        extent_name: extent_{{ item.split(':')[-1] }}_1
        state: present
      loop: "{{ stor_vol_1 }}"
      register: extent_det_1

    - name: Get the extent names
      ansible.builtin.set_fact:
        extent_1: "{{ extent_det_1['results'] | map(attribute='extent_details.name') | list }}"

    - name: Create devices in given cluster
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: device_{{ item }}
        extents: "{{ item }}"
        extent_state: present-in-device
        state: present
      loop: "{{ extent_1 }}"
      register: device_det_1

    - name: Get the device names
      ansible.builtin.set_fact:
        device_1: "{{ device_det_1['results'] | map(attribute='device_details.name') | list }}"

    - name: Debug Device Names
      ansible.builtin.debug:
        var: device_1

    - name: Create virtual volumes in given cluster
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: ansible_vol_{{ item.1 }}
        supporting_device_name: "{{ item.0 }}"
        state: present
      with_together:
        - "{{ device_1 }}"
        - "{{ range(1, 4) | list }}"
      register: vvols

    - name: Build a list of virtual volumes
      ansible.builtin.set_fact:
        virtual_volumes: "{{ virtual_volumes + ['ansible_vol_' ~ item] }}"
      loop: "{{ range(1, 4) | list }}"

    - name: Create Consistency group
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ cg_name }}"
        state: present
      register: create_cg

    - name: Debug create_cg
      ansible.builtin.debug:
        var: create_cg

    - name: Create Consistency group - Idempotency
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ cg_name }}"
        state: present
      register: create_cg_idem

    - name: Debug create_cg_idem
      ansible.builtin.debug:
        var: create_cg_idem

    - name: Add virtual volumes to Consistency group
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ cg_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: present-in-cg
        state: present
      register: add_vol_cg

    - name: Debug add_vol_cg
      ansible.builtin.debug:
        var: add_vol_cg

    - name: Add virtual volumes to  Consistency group - Idempotency
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ cg_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: present-in-cg
        state: present
      register: add_vol_cg_idem

    - name: Debug add_vol_cg_idem
      ansible.builtin.debug:
        var: add_vol_cg_idem

    - name: Get Consistency group
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ cg_name }}"
        state: present
      register: get_cg

    - name: Debug get_cg
      ansible.builtin.debug:
        var: get_cg

    - name: Rename Consistency group
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ cg_name }}"
        new_cg_name: "{{ new_cg_name }}"
        state: present
      register: rename_cg

    - name: Debug rename_cg
      ansible.builtin.debug:
        var: rename_cg

    - name: Rename Consistency group - Idempotency
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ new_cg_name }}"
        new_cg_name: "{{ new_cg_name }}"
        state: present
      register: rename_cg_idem

    - name: Debug rename_cg_idem
      ansible.builtin.debug:
        var: rename_cg_idem

    - name: Remove virtual volumes from Consistency group
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ new_cg_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: absent-in-cg
        state: present
      register: remove_vol_cg

    - name: Debug remove_vol_cg
      ansible.builtin.debug:
        var: remove_vol_cg

    - name: Remove virtual volumes from Consistency group - Idempotency
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ new_cg_name }}"
        virtual_volumes: "{{ virtual_volumes }}"
        virtual_volume_state: absent-in-cg
        state: present
      register: remove_vol_cg_idem

    - name: Debug remove_vol_cg_idem
      ansible.builtin.debug:
        var: remove_vol_cg_idem

    - name: Delete Consistency group
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ new_cg_name }}"
        state: absent
      register: delete_cg

    - name: Debug delete_cg
      ansible.builtin.debug:
        var: delete_cg

    - name: Delete Consistency group - Idempotency
      dellemc_vplex_consistency_group:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        cg_name: "{{ new_cg_name }}"
        state: absent
      register: delete_cg_idem

    - name: Debug delete_cg_idem
      ansible.builtin.debug:
        var: delete_cg_idem

    - name: Delete virtual volumes
      dellemc_vplex_virtual_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        virtual_volume_name: "{{ item }}"
        state: absent
      loop: "{{ virtual_volumes }}"

    - name: Delete devices
      dellemc_vplex_device:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        device_name: "{{ item }}"
        state: absent
      loop: "{{ device_1 }}"

    - name: Delete extents
      dellemc_vplex_extent:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        extent_name: "{{ item }}"
        state: absent
      loop: "{{ extent_1 }}"

    - name: Unclaim Storage Volumes
      dellemc_vplex_storage_volume:
        vplexhost: "{{ vplexhost }}"
        vplexuser: "{{ vplexuser }}"
        vplexpassword: "{{ vplexpassword }}"
        verifycert: "{{ verifycert }}"
        cluster_name: "{{ cluster_name }}"
        storage_volume_id: "{{ item }}"
        claimed_state: unclaimed
        state: present
      loop: "{{ stor_vol_1 }}"
